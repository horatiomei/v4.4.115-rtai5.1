# GNUmakefile.in generated by automake 1.14.1 from GNUmakefile.am.
# addons/cpp/GNUmakefile.  Generated from GNUmakefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/rtai
pkgincludedir = $(includedir)/rtai
pkglibdir = $(libdir)/rtai
pkglibexecdir = $(libexecdir)/rtai
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
#am__append_1 = trace.cc
subdir = addons/cpp
DIST_COMMON = $(srcdir)/GNUmakefile.in $(srcdir)/GNUmakefile.am \
	$(top_srcdir)/base/config/autoconf/mkinstalldirs \
	$(top_srcdir)/base/config/autoconf/depcomp $(include_HEADERS) \
	$(noinst_HEADERS)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/base/config/autoconf/acinclude.m4 \
	$(top_srcdir)/base/config/autoconf/docbook.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) \
	$(top_srcdir)/base/config/autoconf/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/rtai_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libcpp_a_LIBADD =
am__libcpp_a_SOURCES_DIST = builtin.c cs.cc cond.cc count.cc init.c \
	iostream.cc mbx.cc module.cc mutex.cc sem.cc task.cc time.cc \
	tld_key.c rtai_wrapper.c trace.cc
#am__objects_1 = libcpp_a-trace.$(OBJEXT)
am_libcpp_a_OBJECTS = libcpp_a-builtin.$(OBJEXT) libcpp_a-cs.$(OBJEXT) \
	libcpp_a-cond.$(OBJEXT) libcpp_a-count.$(OBJEXT) \
	libcpp_a-init.$(OBJEXT) libcpp_a-iostream.$(OBJEXT) \
	libcpp_a-mbx.$(OBJEXT) libcpp_a-module.$(OBJEXT) \
	libcpp_a-mutex.$(OBJEXT) libcpp_a-sem.$(OBJEXT) \
	libcpp_a-task.$(OBJEXT) libcpp_a-time.$(OBJEXT) \
	libcpp_a-tld_key.$(OBJEXT) libcpp_a-rtai_wrapper.$(OBJEXT) \
	$(am__objects_1)
libcpp_a_OBJECTS = $(am_libcpp_a_OBJECTS)
libcpp_bits_a_LIBADD =
am_libcpp_bits_a_OBJECTS = libcpp_bits_a-bits.$(OBJEXT) \
	libcpp_bits_a-bits_init.$(OBJEXT) \
	libcpp_bits_a-linux_wrapper.$(OBJEXT)
libcpp_bits_a_OBJECTS = $(am_libcpp_bits_a_OBJECTS)
libcpp_rtf_a_LIBADD =
am_libcpp_rtf_a_OBJECTS = libcpp_rtf_a-rtf.$(OBJEXT) \
	libcpp_rtf_a-rtf_init.$(OBJEXT) \
	libcpp_rtf_a-linux_wrapper.$(OBJEXT)
libcpp_rtf_a_OBJECTS = $(am_libcpp_rtf_a_OBJECTS)
libcpp_tbx_a_LIBADD =
am_libcpp_tbx_a_OBJECTS = libcpp_tbx_a-tbx.$(OBJEXT) \
	libcpp_tbx_a-tbx_init.$(OBJEXT) \
	libcpp_tbx_a-linux_wrapper.$(OBJEXT)
libcpp_tbx_a_OBJECTS = $(am_libcpp_tbx_a_OBJECTS)
libcpp_wd_a_LIBADD =
am_libcpp_wd_a_OBJECTS = libcpp_wd_a-watchdog_init.$(OBJEXT) \
	libcpp_wd_a-watchdog.$(OBJEXT) \
	libcpp_wd_a-linux_wrapper.$(OBJEXT)
libcpp_wd_a_OBJECTS = $(am_libcpp_wd_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/base/config/autoconf/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libcpp_a_SOURCES) $(libcpp_bits_a_SOURCES) \
	$(libcpp_rtf_a_SOURCES) $(libcpp_tbx_a_SOURCES) \
	$(libcpp_wd_a_SOURCES)
DIST_SOURCES = $(am__libcpp_a_SOURCES_DIST) $(libcpp_bits_a_SOURCES) \
	$(libcpp_rtf_a_SOURCES) $(libcpp_tbx_a_SOURCES) \
	$(libcpp_wd_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(includedir)"
HEADERS = $(include_HEADERS) $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.14
AWK = gawk
CC = cc
CCAS = cc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = 
CCDEPMODE = depmode=gcc3
CFLAGS = 
COMEDI_DIR = 
CONFIG_RTAI_CPUS = 4
CONFIG_RTAI_LINUXDIR = /usr/src/linux-headers-4.4.115-rtai-5.1+
CPP = cc -E
CPPFLAGS = 
CROSSCOMPILE_TEST = 
CROSS_COMPILE = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DBX_DOC_ROOT = doc/docbook
DBX_FOP = 
DBX_GEN_DOC_ROOT = doc/generated
DBX_LINT = xmllint
DBX_MAYBE_NONET = --nonet
DBX_ROOT = file:///usr/share/sgml/docbook/dtd/xml/4.2
DBX_XSLTPROC = xsltproc
DBX_XSL_ROOT = file:///usr/share/sgml/docbook/stylesheet/xsl/nwalsh
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOXYGEN = doxygen
DOXYGEN_HAVE_DOT = NO
DOXYGEN_SHOW_INCLUDE_FILES = YES
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EFLTK_DIR = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GL_CFLAGS = 
GL_LIBS = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LATEX_BATCHMODE = YES
LATEX_MODE = batchmode
LD = ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = nm
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = rtai
PACKAGE_BUGREPORT = rtai@rtai.org
PACKAGE_NAME = rtai
PACKAGE_STRING = rtai 5.1
PACKAGE_TARNAME = rtai
PACKAGE_URL = 
PACKAGE_VERSION = 5.1
PATH_SEPARATOR = :
RANLIB = ranlib
RTAI_BUILD_STRING = x86_64-unknown-linux-gnu
RTAI_BUILTIN_MODLIST =  malloc
RTAI_COMPAT_CPPFLAGS = 
RTAI_FP_CFLAGS =  -ffast-math -mhard-float
RTAI_HOST_STRING = x86_64-unknown-linux-gnu
RTAI_INSTALL_DIR = ${exec_prefix}
RTAI_KBUILD_BOTTOM = 
RTAI_KBUILD_CLEAN = rm -f *.ko *.mod.c .*.cmd *.o Module.symvers Module.markers modules.order && rm -Rf .tmp_versions
RTAI_KBUILD_CMD = for src in $^; do if test \! -r `basename $$src`; then $(LN_S) $$src; fi; done; 		    rm -f /usr/src/linux-headers-4.4.115-rtai-5.1+/.tmp_versions/rtai_*.mod /usr/src/linux-headers-4.4.115-rtai-5.1+/.tmp_versions/*_rt.mod;                     $(MAKE) -C /usr/src/linux-headers-4.4.115-rtai-5.1+ CROSS_COMPILE=$(CROSS_COMPILE) CC=cc ARCH=x86 		    SUBDIRS=$$PWD M=$$PWD rtai_srctree=`cd $(top_srcdir) && pwd` rtai_srcdir=`cd $(srcdir) && pwd` V=$(V) modules 		    rtai_objs='$(call src2obj,c,$^) $(call src2obj,S,$^) $(call src2obj,cc,$^) $(call src2obj,cpp,$^)' rtai_target=$(basename $@)
RTAI_KBUILD_DISTCLEAN = 
RTAI_KBUILD_ENV = src2obj = $(patsubst %.$(1),%.o,$(filter %.$(1),$(call notdir,$(2))))
RTAI_KBUILD_TOP = @if test \! -r Module.symvers ; then $(LN_S) -f "`cd $(top_builddir) && pwd`/Module.symvers" . ; fi;
RTAI_KMOD_APP_CFLAGS = 
RTAI_KMOD_APP_CXXFLAGS =  -fno-rtti -fno-exceptions -fno-strength-reduce -pipe -fno-use-cxa-atexit
RTAI_KMOD_CFLAGS =  -D__IN_RTAI__
RTAI_KMOD_CXXFLAGS =  -fno-rtti -fno-exceptions -fno-strength-reduce -pipe -fno-use-cxa-atexit -D__IN_RTAI__
RTAI_LINUX_DIR = /usr/src/linux-headers-4.4.115-rtai-5.1+
RTAI_LINUX_VERSION = 4.4.115
RTAI_LXRT_LDADD = 
RTAI_MATH_LIBM = 
RTAI_MAYBE_DOCDIR = doc
RTAI_MAYBE_SIMDIR = 
RTAI_MODULE_DIR = ${exec_prefix}/modules
RTAI_MODULE_EXT = .ko
RTAI_POSIX_WRAP =  -Wl,--wrap -Wl,timer_create -Wl,--wrap -Wl,timer_delete -Wl,--wrap -Wl,timer_getoverrun -Wl,--wrap -Wl,timer_gettime -Wl,--wrap -Wl,timer_settime -Wl,--wrap -Wl,clock_getres -Wl,--wrap -Wl,clock_gettime -Wl,--wrap -Wl,clock_settime -Wl,--wrap -Wl,clock_nanosleep -Wl,--wrap -Wl,nanosleep -Wl,--wrap -Wl,pthread_barrier_init -Wl,--wrap -Wl,pthread_barrier_destroy -Wl,--wrap -Wl,pthread_barrier_wait -Wl,--wrap -Wl,pthread_barrierattr_init -Wl,--wrap -Wl,pthread_barrierattr_destroy -Wl,--wrap -Wl,pthread_barrierattr_getpshared -Wl,--wrap -Wl,pthread_barrierattr_setpshared -Wl,--wrap -Wl,pthread_cond_init -Wl,--wrap -Wl,pthread_cond_destroy -Wl,--wrap -Wl,pthread_cond_signal -Wl,--wrap -Wl,pthread_cond_broadcast -Wl,--wrap -Wl,pthread_cond_wait -Wl,--wrap -Wl,pthread_cond_timedwait -Wl,--wrap -Wl,pthread_condattr_init -Wl,--wrap -Wl,pthread_condattr_destroy -Wl,--wrap -Wl,pthread_condattr_getpshared -Wl,--wrap -Wl,pthread_condattr_setpshared -Wl,--wrap -Wl,pthread_condattr_getclock -Wl,--wrap -Wl,pthread_condattr_setclock -Wl,--wrap -Wl,pthread_mutex_init -Wl,--wrap -Wl,pthread_mutex_destroy -Wl,--wrap -Wl,pthread_mutex_lock -Wl,--wrap -Wl,pthread_mutex_timedlock -Wl,--wrap -Wl,pthread_mutex_trylock -Wl,--wrap -Wl,pthread_mutex_unlock -Wl,--wrap -Wl,pthread_mutexattr_init -Wl,--wrap -Wl,pthread_mutexattr_destroy -Wl,--wrap -Wl,pthread_mutexattr_getpshared -Wl,--wrap -Wl,pthread_mutexattr_setpshared -Wl,--wrap -Wl,pthread_mutexattr_settype -Wl,--wrap -Wl,pthread_mutexattr_gettype -Wl,--wrap -Wl,pthread_rwlock_init -Wl,--wrap -Wl,pthread_rwlock_destroy -Wl,--wrap -Wl,pthread_rwlock_rdlock -Wl,--wrap -Wl,pthread_rwlock_tryrdlock -Wl,--wrap -Wl,pthread_rwlock_timedrdlock -Wl,--wrap -Wl,pthread_rwlock_wrlock -Wl,--wrap -Wl,pthread_rwlock_trywrlock -Wl,--wrap -Wl,pthread_rwlock_timedwrlock -Wl,--wrap -Wl,pthread_rwlock_unlock -Wl,--wrap -Wl,pthread_rwlockattr_init -Wl,--wrap -Wl,pthread_rwlockattr_destroy -Wl,--wrap -Wl,pthread_rwlockattr_getpshared -Wl,--wrap -Wl,pthread_rwlockattr_setpshared -Wl,--wrap -Wl,pthread_rwlockattr_getkind_np -Wl,--wrap -Wl,pthread_rwlockattr_setkind_np -Wl,--wrap -Wl,pthread_spin_init -Wl,--wrap -Wl,pthread_spin_destroy -Wl,--wrap -Wl,pthread_spin_lock -Wl,--wrap -Wl,pthread_spin_trylock -Wl,--wrap -Wl,pthread_spin_unlock -Wl,--wrap -Wl,sem_open -Wl,--wrap -Wl,sem_close -Wl,--wrap -Wl,sem_unlink -Wl,--wrap -Wl,sem_init -Wl,--wrap -Wl,sem_destroy -Wl,--wrap -Wl,sem_wait -Wl,--wrap -Wl,sem_trywait -Wl,--wrap -Wl,sem_timedwait -Wl,--wrap -Wl,sem_post -Wl,--wrap -Wl,sem_getvalue
RTAI_REAL_USER_CFLAGS = -O2  -Wall -Wstrict-prototypes -pipe -D__IN_RTAI__
RTAI_TARGET_ARCH = x86
RTAI_TARGET_ARCH_OPTS =  -msse -mpreferred-stack-boundary=4
RTAI_TARGET_SUBARCH = 64
RTAI_USER_APP_CFLAGS = -O2  -Wall -Wstrict-prototypes -pipe
RTAI_USER_CFLAGS = -I/usr/src/linux-headers-4.4.115-rtai-5.1+/include -O2  -Wall -Wstrict-prototypes -pipe -D__IN_RTAI__
SED = /bin/sed
SENSORS_LIBS = -lsensors
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 5.1
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
abs_builddir = /home/bruce/ubuntu-kernel/v4.4.115-rtai5.1/rtai-5.1/addons/cpp
abs_srcdir = /home/bruce/ubuntu-kernel/v4.4.115-rtai5.1/rtai-5.1/addons/cpp
abs_top_builddir = /home/bruce/ubuntu-kernel/v4.4.115-rtai5.1/rtai-5.1
abs_top_srcdir = /home/bruce/ubuntu-kernel/v4.4.115-rtai5.1/rtai-5.1
ac_ct_AR = 
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = x86_64-unknown-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = x86_64-unknown-linux-gnu
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/bruce/ubuntu-kernel/v4.4.115-rtai5.1/rtai-5.1/base/config/autoconf/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /opt/rtai-5.1_v4.4.115
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs = 
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
moduledir = ${exec_prefix}/modules
modext = .ko
include_HEADERS = rtai_cpp.h
noinst_HEADERS = \
		bits.h \
		cond.h \
		count.h \
		iostream.h \
		linux_wrapper.h \
		mbx.h \
		module.h \
		mutex.h \
		new.h \
		rtai_wrapper.h \
		rtai_pqueue_wrapper.h \
		rtai_pthread_int_wrapper.h \
		rtai_pthread_wrapper.h \
	        tld_key.h \
		rtf.h \
		sem.h \
		task.h \
		tbx.h \
		time.h \
		trace.h \
		watchdog.h

libcpp_a_SOURCES = builtin.c cs.cc cond.cc count.cc init.c iostream.cc \
	mbx.cc module.cc mutex.cc sem.cc task.cc time.cc tld_key.c \
	rtai_wrapper.c $(am__append_1)
libcpp_bits_a_SOURCES = \
		bits.cc \
		bits_init.c \
		linux_wrapper.c

libcpp_rtf_a_SOURCES = \
		rtf.cc \
		rtf_init.c \
		linux_wrapper.c

libcpp_tbx_a_SOURCES = \
		tbx.cc \
		tbx_init.c \
		linux_wrapper.c

libcpp_wd_a_SOURCES = \
		watchdog_init.c \
		watchdog.cc \
		linux_wrapper.c

crt_files = \
	crtbegin.c \
	crtend.c \
	crtmbegin.c \
	crtmend.c \
	crtsbegin.c \
	crtsend.c

crtobjs = $(crt_files:%.c=%.o)
#modules = $(foreach lib,$(noinst_LIBRARIES),$(patsubst lib%.a,rtai_%.o,$(lib)))
modules = rtai_cpp.ko rtai_cpp_rtf.ko rtai_cpp_tbx.ko rtai_cpp_wd.ko
#noinst_LIBRARIES = \
#		libcpp.a \
#		libcpp_bits.a \
#		libcpp_rtf.a \
#		libcpp_tbx.a \
#		libcpp_wd.a

#libcpp_a_AR = $(CROSS_COMPILE)ar cru
#libcpp_a_CFLAGS = \
#	 -D__IN_RTAI__ \
#	-I$(top_srcdir)/base/include \
#	-I../../base/include

#libcpp_a_CXXFLAGS = \
#	 -fno-rtti -fno-exceptions -fno-strength-reduce -pipe -fno-use-cxa-atexit -D__IN_RTAI__ \
#	-I$(top_srcdir)/base/include \
#	-I../../base/include

#libcpp_bits_a_AR = $(CROSS_COMPILE)ar cru
#libcpp_bits_a_CFLAGS = \
#	 -D__IN_RTAI__ \
#	-I$(top_srcdir)/base/include \
#	-I../../base/include

#libcpp_bits_a_CXXFLAGS = \
#	 -fno-rtti -fno-exceptions -fno-strength-reduce -pipe -fno-use-cxa-atexit -D__IN_RTAI__ \
#	-I$(top_srcdir)/base/include \
#	-I../../base/include

#libcpp_rtf_a_AR = $(CROSS_COMPILE)ar cru
#libcpp_rtf_a_CFLAGS = \
#	 -D__IN_RTAI__ \
#	-I$(top_srcdir)/base/include \
#	-I../../base/include

#libcpp_rtf_a_CXXFLAGS = \
#	 -fno-rtti -fno-exceptions -fno-strength-reduce -pipe -fno-use-cxa-atexit -D__IN_RTAI__ \
#	-I$(top_srcdir)/base/include \
#	-I../../base/include

#libcpp_tbx_a_AR = $(CROSS_COMPILE)ar cru
#libcpp_tbx_a_CFLAGS = \
#	 -D__IN_RTAI__ \
#	-I$(top_srcdir)/base/include \
#	-I../../base/include

#libcpp_tbx_a_CXXFLAGS = \
#	 -fno-rtti -fno-exceptions -fno-strength-reduce -pipe -fno-use-cxa-atexit -D__IN_RTAI__ \
#	-I$(top_srcdir)/base/include \
#	-I../../base/include

#libcpp_wd_a_AR = $(CROSS_COMPILE)ar cru
#libcpp_wd_a_CFLAGS = \
#	 -D__IN_RTAI__ \
#	-I$(top_srcdir)/base/include \
#	-I../../base/include

#libcpp_wd_a_CXXFLAGS = \
#	 -fno-rtti -fno-exceptions -fno-strength-reduce -pipe -fno-use-cxa-atexit -D__IN_RTAI__ \
#	-I$(top_srcdir)/base/include \
#	-I../../base/include

#CRTFLAGS = \
#	-I../.. \
#	 -D__IN_RTAI__ \
#	-I$(top_srcdir)/base/include \
#	-I../../base/include

EXTRA_DIST = crt.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj
$(srcdir)/GNUmakefile.in: # $(srcdir)/GNUmakefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign addons/cpp/GNUmakefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign addons/cpp/GNUmakefile
.PRECIOUS: GNUmakefile
GNUmakefile: $(srcdir)/GNUmakefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libcpp.a: $(libcpp_a_OBJECTS) $(libcpp_a_DEPENDENCIES) $(EXTRA_libcpp_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcpp.a
	$(AM_V_AR)$(libcpp_a_AR) libcpp.a $(libcpp_a_OBJECTS) $(libcpp_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcpp.a

libcpp_bits.a: $(libcpp_bits_a_OBJECTS) $(libcpp_bits_a_DEPENDENCIES) $(EXTRA_libcpp_bits_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcpp_bits.a
	$(AM_V_AR)$(libcpp_bits_a_AR) libcpp_bits.a $(libcpp_bits_a_OBJECTS) $(libcpp_bits_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcpp_bits.a

libcpp_rtf.a: $(libcpp_rtf_a_OBJECTS) $(libcpp_rtf_a_DEPENDENCIES) $(EXTRA_libcpp_rtf_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcpp_rtf.a
	$(AM_V_AR)$(libcpp_rtf_a_AR) libcpp_rtf.a $(libcpp_rtf_a_OBJECTS) $(libcpp_rtf_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcpp_rtf.a

libcpp_tbx.a: $(libcpp_tbx_a_OBJECTS) $(libcpp_tbx_a_DEPENDENCIES) $(EXTRA_libcpp_tbx_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcpp_tbx.a
	$(AM_V_AR)$(libcpp_tbx_a_AR) libcpp_tbx.a $(libcpp_tbx_a_OBJECTS) $(libcpp_tbx_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcpp_tbx.a

libcpp_wd.a: $(libcpp_wd_a_OBJECTS) $(libcpp_wd_a_DEPENDENCIES) $(EXTRA_libcpp_wd_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcpp_wd.a
	$(AM_V_AR)$(libcpp_wd_a_AR) libcpp_wd.a $(libcpp_wd_a_OBJECTS) $(libcpp_wd_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcpp_wd.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libcpp_a-builtin.Po
include ./$(DEPDIR)/libcpp_a-cond.Po
include ./$(DEPDIR)/libcpp_a-count.Po
include ./$(DEPDIR)/libcpp_a-cs.Po
include ./$(DEPDIR)/libcpp_a-init.Po
include ./$(DEPDIR)/libcpp_a-iostream.Po
include ./$(DEPDIR)/libcpp_a-mbx.Po
include ./$(DEPDIR)/libcpp_a-module.Po
include ./$(DEPDIR)/libcpp_a-mutex.Po
include ./$(DEPDIR)/libcpp_a-rtai_wrapper.Po
include ./$(DEPDIR)/libcpp_a-sem.Po
include ./$(DEPDIR)/libcpp_a-task.Po
include ./$(DEPDIR)/libcpp_a-time.Po
include ./$(DEPDIR)/libcpp_a-tld_key.Po
include ./$(DEPDIR)/libcpp_a-trace.Po
include ./$(DEPDIR)/libcpp_bits_a-bits.Po
include ./$(DEPDIR)/libcpp_bits_a-bits_init.Po
include ./$(DEPDIR)/libcpp_bits_a-linux_wrapper.Po
include ./$(DEPDIR)/libcpp_rtf_a-linux_wrapper.Po
include ./$(DEPDIR)/libcpp_rtf_a-rtf.Po
include ./$(DEPDIR)/libcpp_rtf_a-rtf_init.Po
include ./$(DEPDIR)/libcpp_tbx_a-linux_wrapper.Po
include ./$(DEPDIR)/libcpp_tbx_a-tbx.Po
include ./$(DEPDIR)/libcpp_tbx_a-tbx_init.Po
include ./$(DEPDIR)/libcpp_wd_a-linux_wrapper.Po
include ./$(DEPDIR)/libcpp_wd_a-watchdog.Po
include ./$(DEPDIR)/libcpp_wd_a-watchdog_init.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libcpp_a-builtin.o: builtin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CFLAGS) $(CFLAGS) -MT libcpp_a-builtin.o -MD -MP -MF $(DEPDIR)/libcpp_a-builtin.Tpo -c -o libcpp_a-builtin.o `test -f 'builtin.c' || echo '$(srcdir)/'`builtin.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-builtin.Tpo $(DEPDIR)/libcpp_a-builtin.Po
#	$(AM_V_CC)source='builtin.c' object='libcpp_a-builtin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CFLAGS) $(CFLAGS) -c -o libcpp_a-builtin.o `test -f 'builtin.c' || echo '$(srcdir)/'`builtin.c

libcpp_a-builtin.obj: builtin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CFLAGS) $(CFLAGS) -MT libcpp_a-builtin.obj -MD -MP -MF $(DEPDIR)/libcpp_a-builtin.Tpo -c -o libcpp_a-builtin.obj `if test -f 'builtin.c'; then $(CYGPATH_W) 'builtin.c'; else $(CYGPATH_W) '$(srcdir)/builtin.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-builtin.Tpo $(DEPDIR)/libcpp_a-builtin.Po
#	$(AM_V_CC)source='builtin.c' object='libcpp_a-builtin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CFLAGS) $(CFLAGS) -c -o libcpp_a-builtin.obj `if test -f 'builtin.c'; then $(CYGPATH_W) 'builtin.c'; else $(CYGPATH_W) '$(srcdir)/builtin.c'; fi`

libcpp_a-init.o: init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CFLAGS) $(CFLAGS) -MT libcpp_a-init.o -MD -MP -MF $(DEPDIR)/libcpp_a-init.Tpo -c -o libcpp_a-init.o `test -f 'init.c' || echo '$(srcdir)/'`init.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-init.Tpo $(DEPDIR)/libcpp_a-init.Po
#	$(AM_V_CC)source='init.c' object='libcpp_a-init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CFLAGS) $(CFLAGS) -c -o libcpp_a-init.o `test -f 'init.c' || echo '$(srcdir)/'`init.c

libcpp_a-init.obj: init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CFLAGS) $(CFLAGS) -MT libcpp_a-init.obj -MD -MP -MF $(DEPDIR)/libcpp_a-init.Tpo -c -o libcpp_a-init.obj `if test -f 'init.c'; then $(CYGPATH_W) 'init.c'; else $(CYGPATH_W) '$(srcdir)/init.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-init.Tpo $(DEPDIR)/libcpp_a-init.Po
#	$(AM_V_CC)source='init.c' object='libcpp_a-init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CFLAGS) $(CFLAGS) -c -o libcpp_a-init.obj `if test -f 'init.c'; then $(CYGPATH_W) 'init.c'; else $(CYGPATH_W) '$(srcdir)/init.c'; fi`

libcpp_a-tld_key.o: tld_key.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CFLAGS) $(CFLAGS) -MT libcpp_a-tld_key.o -MD -MP -MF $(DEPDIR)/libcpp_a-tld_key.Tpo -c -o libcpp_a-tld_key.o `test -f 'tld_key.c' || echo '$(srcdir)/'`tld_key.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-tld_key.Tpo $(DEPDIR)/libcpp_a-tld_key.Po
#	$(AM_V_CC)source='tld_key.c' object='libcpp_a-tld_key.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CFLAGS) $(CFLAGS) -c -o libcpp_a-tld_key.o `test -f 'tld_key.c' || echo '$(srcdir)/'`tld_key.c

libcpp_a-tld_key.obj: tld_key.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CFLAGS) $(CFLAGS) -MT libcpp_a-tld_key.obj -MD -MP -MF $(DEPDIR)/libcpp_a-tld_key.Tpo -c -o libcpp_a-tld_key.obj `if test -f 'tld_key.c'; then $(CYGPATH_W) 'tld_key.c'; else $(CYGPATH_W) '$(srcdir)/tld_key.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-tld_key.Tpo $(DEPDIR)/libcpp_a-tld_key.Po
#	$(AM_V_CC)source='tld_key.c' object='libcpp_a-tld_key.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CFLAGS) $(CFLAGS) -c -o libcpp_a-tld_key.obj `if test -f 'tld_key.c'; then $(CYGPATH_W) 'tld_key.c'; else $(CYGPATH_W) '$(srcdir)/tld_key.c'; fi`

libcpp_a-rtai_wrapper.o: rtai_wrapper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CFLAGS) $(CFLAGS) -MT libcpp_a-rtai_wrapper.o -MD -MP -MF $(DEPDIR)/libcpp_a-rtai_wrapper.Tpo -c -o libcpp_a-rtai_wrapper.o `test -f 'rtai_wrapper.c' || echo '$(srcdir)/'`rtai_wrapper.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-rtai_wrapper.Tpo $(DEPDIR)/libcpp_a-rtai_wrapper.Po
#	$(AM_V_CC)source='rtai_wrapper.c' object='libcpp_a-rtai_wrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CFLAGS) $(CFLAGS) -c -o libcpp_a-rtai_wrapper.o `test -f 'rtai_wrapper.c' || echo '$(srcdir)/'`rtai_wrapper.c

libcpp_a-rtai_wrapper.obj: rtai_wrapper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CFLAGS) $(CFLAGS) -MT libcpp_a-rtai_wrapper.obj -MD -MP -MF $(DEPDIR)/libcpp_a-rtai_wrapper.Tpo -c -o libcpp_a-rtai_wrapper.obj `if test -f 'rtai_wrapper.c'; then $(CYGPATH_W) 'rtai_wrapper.c'; else $(CYGPATH_W) '$(srcdir)/rtai_wrapper.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-rtai_wrapper.Tpo $(DEPDIR)/libcpp_a-rtai_wrapper.Po
#	$(AM_V_CC)source='rtai_wrapper.c' object='libcpp_a-rtai_wrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CFLAGS) $(CFLAGS) -c -o libcpp_a-rtai_wrapper.obj `if test -f 'rtai_wrapper.c'; then $(CYGPATH_W) 'rtai_wrapper.c'; else $(CYGPATH_W) '$(srcdir)/rtai_wrapper.c'; fi`

libcpp_bits_a-bits_init.o: bits_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_bits_a_CFLAGS) $(CFLAGS) -MT libcpp_bits_a-bits_init.o -MD -MP -MF $(DEPDIR)/libcpp_bits_a-bits_init.Tpo -c -o libcpp_bits_a-bits_init.o `test -f 'bits_init.c' || echo '$(srcdir)/'`bits_init.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_bits_a-bits_init.Tpo $(DEPDIR)/libcpp_bits_a-bits_init.Po
#	$(AM_V_CC)source='bits_init.c' object='libcpp_bits_a-bits_init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_bits_a_CFLAGS) $(CFLAGS) -c -o libcpp_bits_a-bits_init.o `test -f 'bits_init.c' || echo '$(srcdir)/'`bits_init.c

libcpp_bits_a-bits_init.obj: bits_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_bits_a_CFLAGS) $(CFLAGS) -MT libcpp_bits_a-bits_init.obj -MD -MP -MF $(DEPDIR)/libcpp_bits_a-bits_init.Tpo -c -o libcpp_bits_a-bits_init.obj `if test -f 'bits_init.c'; then $(CYGPATH_W) 'bits_init.c'; else $(CYGPATH_W) '$(srcdir)/bits_init.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_bits_a-bits_init.Tpo $(DEPDIR)/libcpp_bits_a-bits_init.Po
#	$(AM_V_CC)source='bits_init.c' object='libcpp_bits_a-bits_init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_bits_a_CFLAGS) $(CFLAGS) -c -o libcpp_bits_a-bits_init.obj `if test -f 'bits_init.c'; then $(CYGPATH_W) 'bits_init.c'; else $(CYGPATH_W) '$(srcdir)/bits_init.c'; fi`

libcpp_bits_a-linux_wrapper.o: linux_wrapper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_bits_a_CFLAGS) $(CFLAGS) -MT libcpp_bits_a-linux_wrapper.o -MD -MP -MF $(DEPDIR)/libcpp_bits_a-linux_wrapper.Tpo -c -o libcpp_bits_a-linux_wrapper.o `test -f 'linux_wrapper.c' || echo '$(srcdir)/'`linux_wrapper.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_bits_a-linux_wrapper.Tpo $(DEPDIR)/libcpp_bits_a-linux_wrapper.Po
#	$(AM_V_CC)source='linux_wrapper.c' object='libcpp_bits_a-linux_wrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_bits_a_CFLAGS) $(CFLAGS) -c -o libcpp_bits_a-linux_wrapper.o `test -f 'linux_wrapper.c' || echo '$(srcdir)/'`linux_wrapper.c

libcpp_bits_a-linux_wrapper.obj: linux_wrapper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_bits_a_CFLAGS) $(CFLAGS) -MT libcpp_bits_a-linux_wrapper.obj -MD -MP -MF $(DEPDIR)/libcpp_bits_a-linux_wrapper.Tpo -c -o libcpp_bits_a-linux_wrapper.obj `if test -f 'linux_wrapper.c'; then $(CYGPATH_W) 'linux_wrapper.c'; else $(CYGPATH_W) '$(srcdir)/linux_wrapper.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_bits_a-linux_wrapper.Tpo $(DEPDIR)/libcpp_bits_a-linux_wrapper.Po
#	$(AM_V_CC)source='linux_wrapper.c' object='libcpp_bits_a-linux_wrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_bits_a_CFLAGS) $(CFLAGS) -c -o libcpp_bits_a-linux_wrapper.obj `if test -f 'linux_wrapper.c'; then $(CYGPATH_W) 'linux_wrapper.c'; else $(CYGPATH_W) '$(srcdir)/linux_wrapper.c'; fi`

libcpp_rtf_a-rtf_init.o: rtf_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_rtf_a_CFLAGS) $(CFLAGS) -MT libcpp_rtf_a-rtf_init.o -MD -MP -MF $(DEPDIR)/libcpp_rtf_a-rtf_init.Tpo -c -o libcpp_rtf_a-rtf_init.o `test -f 'rtf_init.c' || echo '$(srcdir)/'`rtf_init.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_rtf_a-rtf_init.Tpo $(DEPDIR)/libcpp_rtf_a-rtf_init.Po
#	$(AM_V_CC)source='rtf_init.c' object='libcpp_rtf_a-rtf_init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_rtf_a_CFLAGS) $(CFLAGS) -c -o libcpp_rtf_a-rtf_init.o `test -f 'rtf_init.c' || echo '$(srcdir)/'`rtf_init.c

libcpp_rtf_a-rtf_init.obj: rtf_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_rtf_a_CFLAGS) $(CFLAGS) -MT libcpp_rtf_a-rtf_init.obj -MD -MP -MF $(DEPDIR)/libcpp_rtf_a-rtf_init.Tpo -c -o libcpp_rtf_a-rtf_init.obj `if test -f 'rtf_init.c'; then $(CYGPATH_W) 'rtf_init.c'; else $(CYGPATH_W) '$(srcdir)/rtf_init.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_rtf_a-rtf_init.Tpo $(DEPDIR)/libcpp_rtf_a-rtf_init.Po
#	$(AM_V_CC)source='rtf_init.c' object='libcpp_rtf_a-rtf_init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_rtf_a_CFLAGS) $(CFLAGS) -c -o libcpp_rtf_a-rtf_init.obj `if test -f 'rtf_init.c'; then $(CYGPATH_W) 'rtf_init.c'; else $(CYGPATH_W) '$(srcdir)/rtf_init.c'; fi`

libcpp_rtf_a-linux_wrapper.o: linux_wrapper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_rtf_a_CFLAGS) $(CFLAGS) -MT libcpp_rtf_a-linux_wrapper.o -MD -MP -MF $(DEPDIR)/libcpp_rtf_a-linux_wrapper.Tpo -c -o libcpp_rtf_a-linux_wrapper.o `test -f 'linux_wrapper.c' || echo '$(srcdir)/'`linux_wrapper.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_rtf_a-linux_wrapper.Tpo $(DEPDIR)/libcpp_rtf_a-linux_wrapper.Po
#	$(AM_V_CC)source='linux_wrapper.c' object='libcpp_rtf_a-linux_wrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_rtf_a_CFLAGS) $(CFLAGS) -c -o libcpp_rtf_a-linux_wrapper.o `test -f 'linux_wrapper.c' || echo '$(srcdir)/'`linux_wrapper.c

libcpp_rtf_a-linux_wrapper.obj: linux_wrapper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_rtf_a_CFLAGS) $(CFLAGS) -MT libcpp_rtf_a-linux_wrapper.obj -MD -MP -MF $(DEPDIR)/libcpp_rtf_a-linux_wrapper.Tpo -c -o libcpp_rtf_a-linux_wrapper.obj `if test -f 'linux_wrapper.c'; then $(CYGPATH_W) 'linux_wrapper.c'; else $(CYGPATH_W) '$(srcdir)/linux_wrapper.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_rtf_a-linux_wrapper.Tpo $(DEPDIR)/libcpp_rtf_a-linux_wrapper.Po
#	$(AM_V_CC)source='linux_wrapper.c' object='libcpp_rtf_a-linux_wrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_rtf_a_CFLAGS) $(CFLAGS) -c -o libcpp_rtf_a-linux_wrapper.obj `if test -f 'linux_wrapper.c'; then $(CYGPATH_W) 'linux_wrapper.c'; else $(CYGPATH_W) '$(srcdir)/linux_wrapper.c'; fi`

libcpp_tbx_a-tbx_init.o: tbx_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_tbx_a_CFLAGS) $(CFLAGS) -MT libcpp_tbx_a-tbx_init.o -MD -MP -MF $(DEPDIR)/libcpp_tbx_a-tbx_init.Tpo -c -o libcpp_tbx_a-tbx_init.o `test -f 'tbx_init.c' || echo '$(srcdir)/'`tbx_init.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_tbx_a-tbx_init.Tpo $(DEPDIR)/libcpp_tbx_a-tbx_init.Po
#	$(AM_V_CC)source='tbx_init.c' object='libcpp_tbx_a-tbx_init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_tbx_a_CFLAGS) $(CFLAGS) -c -o libcpp_tbx_a-tbx_init.o `test -f 'tbx_init.c' || echo '$(srcdir)/'`tbx_init.c

libcpp_tbx_a-tbx_init.obj: tbx_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_tbx_a_CFLAGS) $(CFLAGS) -MT libcpp_tbx_a-tbx_init.obj -MD -MP -MF $(DEPDIR)/libcpp_tbx_a-tbx_init.Tpo -c -o libcpp_tbx_a-tbx_init.obj `if test -f 'tbx_init.c'; then $(CYGPATH_W) 'tbx_init.c'; else $(CYGPATH_W) '$(srcdir)/tbx_init.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_tbx_a-tbx_init.Tpo $(DEPDIR)/libcpp_tbx_a-tbx_init.Po
#	$(AM_V_CC)source='tbx_init.c' object='libcpp_tbx_a-tbx_init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_tbx_a_CFLAGS) $(CFLAGS) -c -o libcpp_tbx_a-tbx_init.obj `if test -f 'tbx_init.c'; then $(CYGPATH_W) 'tbx_init.c'; else $(CYGPATH_W) '$(srcdir)/tbx_init.c'; fi`

libcpp_tbx_a-linux_wrapper.o: linux_wrapper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_tbx_a_CFLAGS) $(CFLAGS) -MT libcpp_tbx_a-linux_wrapper.o -MD -MP -MF $(DEPDIR)/libcpp_tbx_a-linux_wrapper.Tpo -c -o libcpp_tbx_a-linux_wrapper.o `test -f 'linux_wrapper.c' || echo '$(srcdir)/'`linux_wrapper.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_tbx_a-linux_wrapper.Tpo $(DEPDIR)/libcpp_tbx_a-linux_wrapper.Po
#	$(AM_V_CC)source='linux_wrapper.c' object='libcpp_tbx_a-linux_wrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_tbx_a_CFLAGS) $(CFLAGS) -c -o libcpp_tbx_a-linux_wrapper.o `test -f 'linux_wrapper.c' || echo '$(srcdir)/'`linux_wrapper.c

libcpp_tbx_a-linux_wrapper.obj: linux_wrapper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_tbx_a_CFLAGS) $(CFLAGS) -MT libcpp_tbx_a-linux_wrapper.obj -MD -MP -MF $(DEPDIR)/libcpp_tbx_a-linux_wrapper.Tpo -c -o libcpp_tbx_a-linux_wrapper.obj `if test -f 'linux_wrapper.c'; then $(CYGPATH_W) 'linux_wrapper.c'; else $(CYGPATH_W) '$(srcdir)/linux_wrapper.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_tbx_a-linux_wrapper.Tpo $(DEPDIR)/libcpp_tbx_a-linux_wrapper.Po
#	$(AM_V_CC)source='linux_wrapper.c' object='libcpp_tbx_a-linux_wrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_tbx_a_CFLAGS) $(CFLAGS) -c -o libcpp_tbx_a-linux_wrapper.obj `if test -f 'linux_wrapper.c'; then $(CYGPATH_W) 'linux_wrapper.c'; else $(CYGPATH_W) '$(srcdir)/linux_wrapper.c'; fi`

libcpp_wd_a-watchdog_init.o: watchdog_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_wd_a_CFLAGS) $(CFLAGS) -MT libcpp_wd_a-watchdog_init.o -MD -MP -MF $(DEPDIR)/libcpp_wd_a-watchdog_init.Tpo -c -o libcpp_wd_a-watchdog_init.o `test -f 'watchdog_init.c' || echo '$(srcdir)/'`watchdog_init.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_wd_a-watchdog_init.Tpo $(DEPDIR)/libcpp_wd_a-watchdog_init.Po
#	$(AM_V_CC)source='watchdog_init.c' object='libcpp_wd_a-watchdog_init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_wd_a_CFLAGS) $(CFLAGS) -c -o libcpp_wd_a-watchdog_init.o `test -f 'watchdog_init.c' || echo '$(srcdir)/'`watchdog_init.c

libcpp_wd_a-watchdog_init.obj: watchdog_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_wd_a_CFLAGS) $(CFLAGS) -MT libcpp_wd_a-watchdog_init.obj -MD -MP -MF $(DEPDIR)/libcpp_wd_a-watchdog_init.Tpo -c -o libcpp_wd_a-watchdog_init.obj `if test -f 'watchdog_init.c'; then $(CYGPATH_W) 'watchdog_init.c'; else $(CYGPATH_W) '$(srcdir)/watchdog_init.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_wd_a-watchdog_init.Tpo $(DEPDIR)/libcpp_wd_a-watchdog_init.Po
#	$(AM_V_CC)source='watchdog_init.c' object='libcpp_wd_a-watchdog_init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_wd_a_CFLAGS) $(CFLAGS) -c -o libcpp_wd_a-watchdog_init.obj `if test -f 'watchdog_init.c'; then $(CYGPATH_W) 'watchdog_init.c'; else $(CYGPATH_W) '$(srcdir)/watchdog_init.c'; fi`

libcpp_wd_a-linux_wrapper.o: linux_wrapper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_wd_a_CFLAGS) $(CFLAGS) -MT libcpp_wd_a-linux_wrapper.o -MD -MP -MF $(DEPDIR)/libcpp_wd_a-linux_wrapper.Tpo -c -o libcpp_wd_a-linux_wrapper.o `test -f 'linux_wrapper.c' || echo '$(srcdir)/'`linux_wrapper.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_wd_a-linux_wrapper.Tpo $(DEPDIR)/libcpp_wd_a-linux_wrapper.Po
#	$(AM_V_CC)source='linux_wrapper.c' object='libcpp_wd_a-linux_wrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_wd_a_CFLAGS) $(CFLAGS) -c -o libcpp_wd_a-linux_wrapper.o `test -f 'linux_wrapper.c' || echo '$(srcdir)/'`linux_wrapper.c

libcpp_wd_a-linux_wrapper.obj: linux_wrapper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_wd_a_CFLAGS) $(CFLAGS) -MT libcpp_wd_a-linux_wrapper.obj -MD -MP -MF $(DEPDIR)/libcpp_wd_a-linux_wrapper.Tpo -c -o libcpp_wd_a-linux_wrapper.obj `if test -f 'linux_wrapper.c'; then $(CYGPATH_W) 'linux_wrapper.c'; else $(CYGPATH_W) '$(srcdir)/linux_wrapper.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_wd_a-linux_wrapper.Tpo $(DEPDIR)/libcpp_wd_a-linux_wrapper.Po
#	$(AM_V_CC)source='linux_wrapper.c' object='libcpp_wd_a-linux_wrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_wd_a_CFLAGS) $(CFLAGS) -c -o libcpp_wd_a-linux_wrapper.obj `if test -f 'linux_wrapper.c'; then $(CYGPATH_W) 'linux_wrapper.c'; else $(CYGPATH_W) '$(srcdir)/linux_wrapper.c'; fi`

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libcpp_a-cs.o: cs.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-cs.o -MD -MP -MF $(DEPDIR)/libcpp_a-cs.Tpo -c -o libcpp_a-cs.o `test -f 'cs.cc' || echo '$(srcdir)/'`cs.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-cs.Tpo $(DEPDIR)/libcpp_a-cs.Po
#	$(AM_V_CXX)source='cs.cc' object='libcpp_a-cs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-cs.o `test -f 'cs.cc' || echo '$(srcdir)/'`cs.cc

libcpp_a-cs.obj: cs.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-cs.obj -MD -MP -MF $(DEPDIR)/libcpp_a-cs.Tpo -c -o libcpp_a-cs.obj `if test -f 'cs.cc'; then $(CYGPATH_W) 'cs.cc'; else $(CYGPATH_W) '$(srcdir)/cs.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-cs.Tpo $(DEPDIR)/libcpp_a-cs.Po
#	$(AM_V_CXX)source='cs.cc' object='libcpp_a-cs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-cs.obj `if test -f 'cs.cc'; then $(CYGPATH_W) 'cs.cc'; else $(CYGPATH_W) '$(srcdir)/cs.cc'; fi`

libcpp_a-cond.o: cond.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-cond.o -MD -MP -MF $(DEPDIR)/libcpp_a-cond.Tpo -c -o libcpp_a-cond.o `test -f 'cond.cc' || echo '$(srcdir)/'`cond.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-cond.Tpo $(DEPDIR)/libcpp_a-cond.Po
#	$(AM_V_CXX)source='cond.cc' object='libcpp_a-cond.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-cond.o `test -f 'cond.cc' || echo '$(srcdir)/'`cond.cc

libcpp_a-cond.obj: cond.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-cond.obj -MD -MP -MF $(DEPDIR)/libcpp_a-cond.Tpo -c -o libcpp_a-cond.obj `if test -f 'cond.cc'; then $(CYGPATH_W) 'cond.cc'; else $(CYGPATH_W) '$(srcdir)/cond.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-cond.Tpo $(DEPDIR)/libcpp_a-cond.Po
#	$(AM_V_CXX)source='cond.cc' object='libcpp_a-cond.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-cond.obj `if test -f 'cond.cc'; then $(CYGPATH_W) 'cond.cc'; else $(CYGPATH_W) '$(srcdir)/cond.cc'; fi`

libcpp_a-count.o: count.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-count.o -MD -MP -MF $(DEPDIR)/libcpp_a-count.Tpo -c -o libcpp_a-count.o `test -f 'count.cc' || echo '$(srcdir)/'`count.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-count.Tpo $(DEPDIR)/libcpp_a-count.Po
#	$(AM_V_CXX)source='count.cc' object='libcpp_a-count.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-count.o `test -f 'count.cc' || echo '$(srcdir)/'`count.cc

libcpp_a-count.obj: count.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-count.obj -MD -MP -MF $(DEPDIR)/libcpp_a-count.Tpo -c -o libcpp_a-count.obj `if test -f 'count.cc'; then $(CYGPATH_W) 'count.cc'; else $(CYGPATH_W) '$(srcdir)/count.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-count.Tpo $(DEPDIR)/libcpp_a-count.Po
#	$(AM_V_CXX)source='count.cc' object='libcpp_a-count.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-count.obj `if test -f 'count.cc'; then $(CYGPATH_W) 'count.cc'; else $(CYGPATH_W) '$(srcdir)/count.cc'; fi`

libcpp_a-iostream.o: iostream.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-iostream.o -MD -MP -MF $(DEPDIR)/libcpp_a-iostream.Tpo -c -o libcpp_a-iostream.o `test -f 'iostream.cc' || echo '$(srcdir)/'`iostream.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-iostream.Tpo $(DEPDIR)/libcpp_a-iostream.Po
#	$(AM_V_CXX)source='iostream.cc' object='libcpp_a-iostream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-iostream.o `test -f 'iostream.cc' || echo '$(srcdir)/'`iostream.cc

libcpp_a-iostream.obj: iostream.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-iostream.obj -MD -MP -MF $(DEPDIR)/libcpp_a-iostream.Tpo -c -o libcpp_a-iostream.obj `if test -f 'iostream.cc'; then $(CYGPATH_W) 'iostream.cc'; else $(CYGPATH_W) '$(srcdir)/iostream.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-iostream.Tpo $(DEPDIR)/libcpp_a-iostream.Po
#	$(AM_V_CXX)source='iostream.cc' object='libcpp_a-iostream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-iostream.obj `if test -f 'iostream.cc'; then $(CYGPATH_W) 'iostream.cc'; else $(CYGPATH_W) '$(srcdir)/iostream.cc'; fi`

libcpp_a-mbx.o: mbx.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-mbx.o -MD -MP -MF $(DEPDIR)/libcpp_a-mbx.Tpo -c -o libcpp_a-mbx.o `test -f 'mbx.cc' || echo '$(srcdir)/'`mbx.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-mbx.Tpo $(DEPDIR)/libcpp_a-mbx.Po
#	$(AM_V_CXX)source='mbx.cc' object='libcpp_a-mbx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-mbx.o `test -f 'mbx.cc' || echo '$(srcdir)/'`mbx.cc

libcpp_a-mbx.obj: mbx.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-mbx.obj -MD -MP -MF $(DEPDIR)/libcpp_a-mbx.Tpo -c -o libcpp_a-mbx.obj `if test -f 'mbx.cc'; then $(CYGPATH_W) 'mbx.cc'; else $(CYGPATH_W) '$(srcdir)/mbx.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-mbx.Tpo $(DEPDIR)/libcpp_a-mbx.Po
#	$(AM_V_CXX)source='mbx.cc' object='libcpp_a-mbx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-mbx.obj `if test -f 'mbx.cc'; then $(CYGPATH_W) 'mbx.cc'; else $(CYGPATH_W) '$(srcdir)/mbx.cc'; fi`

libcpp_a-module.o: module.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-module.o -MD -MP -MF $(DEPDIR)/libcpp_a-module.Tpo -c -o libcpp_a-module.o `test -f 'module.cc' || echo '$(srcdir)/'`module.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-module.Tpo $(DEPDIR)/libcpp_a-module.Po
#	$(AM_V_CXX)source='module.cc' object='libcpp_a-module.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-module.o `test -f 'module.cc' || echo '$(srcdir)/'`module.cc

libcpp_a-module.obj: module.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-module.obj -MD -MP -MF $(DEPDIR)/libcpp_a-module.Tpo -c -o libcpp_a-module.obj `if test -f 'module.cc'; then $(CYGPATH_W) 'module.cc'; else $(CYGPATH_W) '$(srcdir)/module.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-module.Tpo $(DEPDIR)/libcpp_a-module.Po
#	$(AM_V_CXX)source='module.cc' object='libcpp_a-module.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-module.obj `if test -f 'module.cc'; then $(CYGPATH_W) 'module.cc'; else $(CYGPATH_W) '$(srcdir)/module.cc'; fi`

libcpp_a-mutex.o: mutex.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-mutex.o -MD -MP -MF $(DEPDIR)/libcpp_a-mutex.Tpo -c -o libcpp_a-mutex.o `test -f 'mutex.cc' || echo '$(srcdir)/'`mutex.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-mutex.Tpo $(DEPDIR)/libcpp_a-mutex.Po
#	$(AM_V_CXX)source='mutex.cc' object='libcpp_a-mutex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-mutex.o `test -f 'mutex.cc' || echo '$(srcdir)/'`mutex.cc

libcpp_a-mutex.obj: mutex.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-mutex.obj -MD -MP -MF $(DEPDIR)/libcpp_a-mutex.Tpo -c -o libcpp_a-mutex.obj `if test -f 'mutex.cc'; then $(CYGPATH_W) 'mutex.cc'; else $(CYGPATH_W) '$(srcdir)/mutex.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-mutex.Tpo $(DEPDIR)/libcpp_a-mutex.Po
#	$(AM_V_CXX)source='mutex.cc' object='libcpp_a-mutex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-mutex.obj `if test -f 'mutex.cc'; then $(CYGPATH_W) 'mutex.cc'; else $(CYGPATH_W) '$(srcdir)/mutex.cc'; fi`

libcpp_a-sem.o: sem.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-sem.o -MD -MP -MF $(DEPDIR)/libcpp_a-sem.Tpo -c -o libcpp_a-sem.o `test -f 'sem.cc' || echo '$(srcdir)/'`sem.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-sem.Tpo $(DEPDIR)/libcpp_a-sem.Po
#	$(AM_V_CXX)source='sem.cc' object='libcpp_a-sem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-sem.o `test -f 'sem.cc' || echo '$(srcdir)/'`sem.cc

libcpp_a-sem.obj: sem.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-sem.obj -MD -MP -MF $(DEPDIR)/libcpp_a-sem.Tpo -c -o libcpp_a-sem.obj `if test -f 'sem.cc'; then $(CYGPATH_W) 'sem.cc'; else $(CYGPATH_W) '$(srcdir)/sem.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-sem.Tpo $(DEPDIR)/libcpp_a-sem.Po
#	$(AM_V_CXX)source='sem.cc' object='libcpp_a-sem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-sem.obj `if test -f 'sem.cc'; then $(CYGPATH_W) 'sem.cc'; else $(CYGPATH_W) '$(srcdir)/sem.cc'; fi`

libcpp_a-task.o: task.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-task.o -MD -MP -MF $(DEPDIR)/libcpp_a-task.Tpo -c -o libcpp_a-task.o `test -f 'task.cc' || echo '$(srcdir)/'`task.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-task.Tpo $(DEPDIR)/libcpp_a-task.Po
#	$(AM_V_CXX)source='task.cc' object='libcpp_a-task.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-task.o `test -f 'task.cc' || echo '$(srcdir)/'`task.cc

libcpp_a-task.obj: task.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-task.obj -MD -MP -MF $(DEPDIR)/libcpp_a-task.Tpo -c -o libcpp_a-task.obj `if test -f 'task.cc'; then $(CYGPATH_W) 'task.cc'; else $(CYGPATH_W) '$(srcdir)/task.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-task.Tpo $(DEPDIR)/libcpp_a-task.Po
#	$(AM_V_CXX)source='task.cc' object='libcpp_a-task.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-task.obj `if test -f 'task.cc'; then $(CYGPATH_W) 'task.cc'; else $(CYGPATH_W) '$(srcdir)/task.cc'; fi`

libcpp_a-time.o: time.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-time.o -MD -MP -MF $(DEPDIR)/libcpp_a-time.Tpo -c -o libcpp_a-time.o `test -f 'time.cc' || echo '$(srcdir)/'`time.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-time.Tpo $(DEPDIR)/libcpp_a-time.Po
#	$(AM_V_CXX)source='time.cc' object='libcpp_a-time.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-time.o `test -f 'time.cc' || echo '$(srcdir)/'`time.cc

libcpp_a-time.obj: time.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-time.obj -MD -MP -MF $(DEPDIR)/libcpp_a-time.Tpo -c -o libcpp_a-time.obj `if test -f 'time.cc'; then $(CYGPATH_W) 'time.cc'; else $(CYGPATH_W) '$(srcdir)/time.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-time.Tpo $(DEPDIR)/libcpp_a-time.Po
#	$(AM_V_CXX)source='time.cc' object='libcpp_a-time.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-time.obj `if test -f 'time.cc'; then $(CYGPATH_W) 'time.cc'; else $(CYGPATH_W) '$(srcdir)/time.cc'; fi`

libcpp_a-trace.o: trace.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-trace.o -MD -MP -MF $(DEPDIR)/libcpp_a-trace.Tpo -c -o libcpp_a-trace.o `test -f 'trace.cc' || echo '$(srcdir)/'`trace.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-trace.Tpo $(DEPDIR)/libcpp_a-trace.Po
#	$(AM_V_CXX)source='trace.cc' object='libcpp_a-trace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-trace.o `test -f 'trace.cc' || echo '$(srcdir)/'`trace.cc

libcpp_a-trace.obj: trace.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_a-trace.obj -MD -MP -MF $(DEPDIR)/libcpp_a-trace.Tpo -c -o libcpp_a-trace.obj `if test -f 'trace.cc'; then $(CYGPATH_W) 'trace.cc'; else $(CYGPATH_W) '$(srcdir)/trace.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_a-trace.Tpo $(DEPDIR)/libcpp_a-trace.Po
#	$(AM_V_CXX)source='trace.cc' object='libcpp_a-trace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_a-trace.obj `if test -f 'trace.cc'; then $(CYGPATH_W) 'trace.cc'; else $(CYGPATH_W) '$(srcdir)/trace.cc'; fi`

libcpp_bits_a-bits.o: bits.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_bits_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_bits_a-bits.o -MD -MP -MF $(DEPDIR)/libcpp_bits_a-bits.Tpo -c -o libcpp_bits_a-bits.o `test -f 'bits.cc' || echo '$(srcdir)/'`bits.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_bits_a-bits.Tpo $(DEPDIR)/libcpp_bits_a-bits.Po
#	$(AM_V_CXX)source='bits.cc' object='libcpp_bits_a-bits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_bits_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_bits_a-bits.o `test -f 'bits.cc' || echo '$(srcdir)/'`bits.cc

libcpp_bits_a-bits.obj: bits.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_bits_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_bits_a-bits.obj -MD -MP -MF $(DEPDIR)/libcpp_bits_a-bits.Tpo -c -o libcpp_bits_a-bits.obj `if test -f 'bits.cc'; then $(CYGPATH_W) 'bits.cc'; else $(CYGPATH_W) '$(srcdir)/bits.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_bits_a-bits.Tpo $(DEPDIR)/libcpp_bits_a-bits.Po
#	$(AM_V_CXX)source='bits.cc' object='libcpp_bits_a-bits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_bits_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_bits_a-bits.obj `if test -f 'bits.cc'; then $(CYGPATH_W) 'bits.cc'; else $(CYGPATH_W) '$(srcdir)/bits.cc'; fi`

libcpp_rtf_a-rtf.o: rtf.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_rtf_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_rtf_a-rtf.o -MD -MP -MF $(DEPDIR)/libcpp_rtf_a-rtf.Tpo -c -o libcpp_rtf_a-rtf.o `test -f 'rtf.cc' || echo '$(srcdir)/'`rtf.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_rtf_a-rtf.Tpo $(DEPDIR)/libcpp_rtf_a-rtf.Po
#	$(AM_V_CXX)source='rtf.cc' object='libcpp_rtf_a-rtf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_rtf_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_rtf_a-rtf.o `test -f 'rtf.cc' || echo '$(srcdir)/'`rtf.cc

libcpp_rtf_a-rtf.obj: rtf.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_rtf_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_rtf_a-rtf.obj -MD -MP -MF $(DEPDIR)/libcpp_rtf_a-rtf.Tpo -c -o libcpp_rtf_a-rtf.obj `if test -f 'rtf.cc'; then $(CYGPATH_W) 'rtf.cc'; else $(CYGPATH_W) '$(srcdir)/rtf.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_rtf_a-rtf.Tpo $(DEPDIR)/libcpp_rtf_a-rtf.Po
#	$(AM_V_CXX)source='rtf.cc' object='libcpp_rtf_a-rtf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_rtf_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_rtf_a-rtf.obj `if test -f 'rtf.cc'; then $(CYGPATH_W) 'rtf.cc'; else $(CYGPATH_W) '$(srcdir)/rtf.cc'; fi`

libcpp_tbx_a-tbx.o: tbx.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_tbx_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_tbx_a-tbx.o -MD -MP -MF $(DEPDIR)/libcpp_tbx_a-tbx.Tpo -c -o libcpp_tbx_a-tbx.o `test -f 'tbx.cc' || echo '$(srcdir)/'`tbx.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_tbx_a-tbx.Tpo $(DEPDIR)/libcpp_tbx_a-tbx.Po
#	$(AM_V_CXX)source='tbx.cc' object='libcpp_tbx_a-tbx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_tbx_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_tbx_a-tbx.o `test -f 'tbx.cc' || echo '$(srcdir)/'`tbx.cc

libcpp_tbx_a-tbx.obj: tbx.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_tbx_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_tbx_a-tbx.obj -MD -MP -MF $(DEPDIR)/libcpp_tbx_a-tbx.Tpo -c -o libcpp_tbx_a-tbx.obj `if test -f 'tbx.cc'; then $(CYGPATH_W) 'tbx.cc'; else $(CYGPATH_W) '$(srcdir)/tbx.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_tbx_a-tbx.Tpo $(DEPDIR)/libcpp_tbx_a-tbx.Po
#	$(AM_V_CXX)source='tbx.cc' object='libcpp_tbx_a-tbx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_tbx_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_tbx_a-tbx.obj `if test -f 'tbx.cc'; then $(CYGPATH_W) 'tbx.cc'; else $(CYGPATH_W) '$(srcdir)/tbx.cc'; fi`

libcpp_wd_a-watchdog.o: watchdog.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_wd_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_wd_a-watchdog.o -MD -MP -MF $(DEPDIR)/libcpp_wd_a-watchdog.Tpo -c -o libcpp_wd_a-watchdog.o `test -f 'watchdog.cc' || echo '$(srcdir)/'`watchdog.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_wd_a-watchdog.Tpo $(DEPDIR)/libcpp_wd_a-watchdog.Po
#	$(AM_V_CXX)source='watchdog.cc' object='libcpp_wd_a-watchdog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_wd_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_wd_a-watchdog.o `test -f 'watchdog.cc' || echo '$(srcdir)/'`watchdog.cc

libcpp_wd_a-watchdog.obj: watchdog.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_wd_a_CXXFLAGS) $(CXXFLAGS) -MT libcpp_wd_a-watchdog.obj -MD -MP -MF $(DEPDIR)/libcpp_wd_a-watchdog.Tpo -c -o libcpp_wd_a-watchdog.obj `if test -f 'watchdog.cc'; then $(CYGPATH_W) 'watchdog.cc'; else $(CYGPATH_W) '$(srcdir)/watchdog.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpp_wd_a-watchdog.Tpo $(DEPDIR)/libcpp_wd_a-watchdog.Po
#	$(AM_V_CXX)source='watchdog.cc' object='libcpp_wd_a-watchdog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcpp_wd_a_CXXFLAGS) $(CXXFLAGS) -c -o libcpp_wd_a-watchdog.obj `if test -f 'watchdog.cc'; then $(CYGPATH_W) 'watchdog.cc'; else $(CYGPATH_W) '$(srcdir)/watchdog.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: GNUmakefile $(LIBRARIES) $(HEADERS) all-local
installdirs:
	for dir in "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#clean-local:
clean: clean-am

clean-am: clean-generic clean-libtool clean-local \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f GNUmakefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-exec-local

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f GNUmakefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am all-local check check-am clean \
	clean-generic clean-libtool clean-local clean-noinstLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-local install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-includeHEADERS


rtai_cpp.ko: src2obj = $(patsubst %.$(1),%.o,$(filter %.$(1),$(call notdir,$(2))))
rtai_cpp.ko: $(libcpp_a_SOURCES) $(noinst_HEADERS)
	@if test \! -r Module.symvers ; then $(LN_S) -f "`cd $(top_builddir) && pwd`/Module.symvers" . ; fi; \
	for src in $^; do if test \! -r `basename $$src`; then $(LN_S) $$src; fi; done; 		    rm -f /usr/src/linux-headers-4.4.115-rtai-5.1+/.tmp_versions/rtai_*.mod /usr/src/linux-headers-4.4.115-rtai-5.1+/.tmp_versions/*_rt.mod;                     $(MAKE) -C /usr/src/linux-headers-4.4.115-rtai-5.1+ CROSS_COMPILE=$(CROSS_COMPILE) CC=cc ARCH=x86 		    SUBDIRS=$$PWD M=$$PWD rtai_srctree=`cd $(top_srcdir) && pwd` rtai_srcdir=`cd $(srcdir) && pwd` V=$(V) modules 		    rtai_objs='$(call src2obj,c,$^) $(call src2obj,S,$^) $(call src2obj,cc,$^) $(call src2obj,cpp,$^)' rtai_target=$(basename $@) \
	

rtai_cpp_bits.ko: src2obj = $(patsubst %.$(1),%.o,$(filter %.$(1),$(call notdir,$(2))))
rtai_cpp_bits.ko: $(libcpp_bits_a_SOURCES) $(noinst_HEADERS)
	@if test \! -r Module.symvers ; then $(LN_S) -f "`cd $(top_builddir) && pwd`/Module.symvers" . ; fi; \
	for src in $^; do if test \! -r `basename $$src`; then $(LN_S) $$src; fi; done; 		    rm -f /usr/src/linux-headers-4.4.115-rtai-5.1+/.tmp_versions/rtai_*.mod /usr/src/linux-headers-4.4.115-rtai-5.1+/.tmp_versions/*_rt.mod;                     $(MAKE) -C /usr/src/linux-headers-4.4.115-rtai-5.1+ CROSS_COMPILE=$(CROSS_COMPILE) CC=cc ARCH=x86 		    SUBDIRS=$$PWD M=$$PWD rtai_srctree=`cd $(top_srcdir) && pwd` rtai_srcdir=`cd $(srcdir) && pwd` V=$(V) modules 		    rtai_objs='$(call src2obj,c,$^) $(call src2obj,S,$^) $(call src2obj,cc,$^) $(call src2obj,cpp,$^)' rtai_target=$(basename $@) \
	

rtai_cpp_rtf.ko: src2obj = $(patsubst %.$(1),%.o,$(filter %.$(1),$(call notdir,$(2))))
rtai_cpp_rtf.ko: $(libcpp_rtf_a_SOURCES) $(noinst_HEADERS)
	@if test \! -r Module.symvers ; then $(LN_S) -f "`cd $(top_builddir) && pwd`/Module.symvers" . ; fi; \
	for src in $^; do if test \! -r `basename $$src`; then $(LN_S) $$src; fi; done; 		    rm -f /usr/src/linux-headers-4.4.115-rtai-5.1+/.tmp_versions/rtai_*.mod /usr/src/linux-headers-4.4.115-rtai-5.1+/.tmp_versions/*_rt.mod;                     $(MAKE) -C /usr/src/linux-headers-4.4.115-rtai-5.1+ CROSS_COMPILE=$(CROSS_COMPILE) CC=cc ARCH=x86 		    SUBDIRS=$$PWD M=$$PWD rtai_srctree=`cd $(top_srcdir) && pwd` rtai_srcdir=`cd $(srcdir) && pwd` V=$(V) modules 		    rtai_objs='$(call src2obj,c,$^) $(call src2obj,S,$^) $(call src2obj,cc,$^) $(call src2obj,cpp,$^)' rtai_target=$(basename $@) \
	

rtai_cpp_tbx.ko: src2obj = $(patsubst %.$(1),%.o,$(filter %.$(1),$(call notdir,$(2))))
rtai_cpp_tbx.ko: $(libcpp_tbx_a_SOURCES) $(noinst_HEADERS)
	@if test \! -r Module.symvers ; then $(LN_S) -f "`cd $(top_builddir) && pwd`/Module.symvers" . ; fi; \
	for src in $^; do if test \! -r `basename $$src`; then $(LN_S) $$src; fi; done; 		    rm -f /usr/src/linux-headers-4.4.115-rtai-5.1+/.tmp_versions/rtai_*.mod /usr/src/linux-headers-4.4.115-rtai-5.1+/.tmp_versions/*_rt.mod;                     $(MAKE) -C /usr/src/linux-headers-4.4.115-rtai-5.1+ CROSS_COMPILE=$(CROSS_COMPILE) CC=cc ARCH=x86 		    SUBDIRS=$$PWD M=$$PWD rtai_srctree=`cd $(top_srcdir) && pwd` rtai_srcdir=`cd $(srcdir) && pwd` V=$(V) modules 		    rtai_objs='$(call src2obj,c,$^) $(call src2obj,S,$^) $(call src2obj,cc,$^) $(call src2obj,cpp,$^)' rtai_target=$(basename $@) \
	

rtai_cpp_wd.ko: src2obj = $(patsubst %.$(1),%.o,$(filter %.$(1),$(call notdir,$(2))))
rtai_cpp_wd.ko: $(libcpp_wd_a_SOURCES) $(noinst_HEADERS)
	@if test \! -r Module.symvers ; then $(LN_S) -f "`cd $(top_builddir) && pwd`/Module.symvers" . ; fi; \
	for src in $^; do if test \! -r `basename $$src`; then $(LN_S) $$src; fi; done; 		    rm -f /usr/src/linux-headers-4.4.115-rtai-5.1+/.tmp_versions/rtai_*.mod /usr/src/linux-headers-4.4.115-rtai-5.1+/.tmp_versions/*_rt.mod;                     $(MAKE) -C /usr/src/linux-headers-4.4.115-rtai-5.1+ CROSS_COMPILE=$(CROSS_COMPILE) CC=cc ARCH=x86 		    SUBDIRS=$$PWD M=$$PWD rtai_srctree=`cd $(top_srcdir) && pwd` rtai_srcdir=`cd $(srcdir) && pwd` V=$(V) modules 		    rtai_objs='$(call src2obj,c,$^) $(call src2obj,S,$^) $(call src2obj,cc,$^) $(call src2obj,cpp,$^)' rtai_target=$(basename $@) \
	

clean-local:
	rm -f *.ko *.mod.c .*.cmd *.o Module.symvers Module.markers modules.order && rm -Rf .tmp_versions

#crtsbegin.o : $(srcdir)/crt.c
#	$(CC) $(CRTFLAGS) -DCRT_BEGIN -DNO_MOD_INIT -c $< -o $@

#crtsend.o : $(srcdir)/crt.c
#	$(CC) $(CRTFLAGS) -DCRT_END -DNO_MOD_INIT -c $< -o $@

#crtbegin.o : $(srcdir)/crt.c
#	$(CC) $(CRTFLAGS) -DCRT_BEGIN -c $< -o $@

#crtend.o : $(srcdir)/crt.c
#	$(CC) $(CRTFLAGS) -DCRT_END -c $< -o $@

#crtmbegin.o : $(srcdir)/crt.c
#	$(CC) $(CRTFLAGS) -DCRT_BEGIN -DUSE_MAIN -c $< -o $@

#crtmend.o : $(srcdir)/crt.c 
#	$(CC) $(CRTFLAGS) -DCRT_END -DUSE_MAIN -c $< -o $@

#rtai_%.o: lib%.a
#	$(CROSS_COMPILE)$(LD) --whole-archive $< -r -o $@

all-local: $(modules) $(crtobjs)
#	$(mkinstalldirs) $(top_srcdir)/modules
#	$(INSTALL_DATA) $^ $(top_srcdir)/modules

install-exec-local: $(modules) $(crtobjs)
	$(mkinstalldirs) $(DESTDIR)$(moduledir)
	$(INSTALL_DATA) $(modules) $(DESTDIR)$(moduledir)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	$(INSTALL_DATA) $(crtobjs) $(DESTDIR)$(libdir)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
